<launch>
  <node name="usb_cam" pkg="usb_cam" respawn="true" type="usb_cam_node" output="screen">
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
    <remap from="/usb_cam/image_raw" to="/image"/>
  </node>
  
  <!--yellow-->
  <!--<rosparam param="thresh/">
    high: {h: 99, s: 255, v: 255}
    low: {h: 90, s: 112, v: 100}
  </rosparam>-->

  <!--red-->
  <rosparam param="thresh/">
    high: {h: 125, s: 255, v: 255}
    low: {h: 115, s: 112, v: 100}
  </rosparam> 
  <node name="ball_detector_node" pkg="ball_detector" respawn="true" type="ball_detector_node" output="screen" />
  <node name="ballDetectorConfig" pkg="ball_detector" type="configGUI.py" />
  <!--<include file="$(find ball_detector)/launch/displayDebugImages.launch" />-->
  <node name="landmarkDetector" pkg="landmark_self_sim" respawn="true" type="landmarkDetector" output="screen" />
  <node name="CameraServo" pkg="lab3" respawn="true" type="CameraServo" output="screen" />  
  <node name="ballLandInfo" pkg="lab3" respawn="true" type="ballLandInfo" output="screen" />
  <node name="hasBall" pkg="lab3" respawn="true" type="hasBall" output="screen" />
  <node name="arbitrator" pkg="lab2" respawn="true" type="arbitrator" output="screen" />
  <node pkg="joy" name="joystick" type="joy_node"/>
	<node pkg="lab2" name="joy_constant" type="joy_constant"/>
	<node pkg="lab2" name="joyAngleIntegrater" type="joyAngleIntegrater"/>
	<node pkg="lab2" name="sensorFilter" type="sensorFilter"/>
	<node pkg="lab2" name="angularPositionPID" output="screen" type="angularPositionPID"/>
</launch>
